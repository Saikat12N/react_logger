{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Projects\\\\React\\\\auto_race\\\\new_client\\\\src\\\\celements\\\\inputs\\\\Cinput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, forwardRef } from \"react\";\nimport styles from \"./Cinput.module.css\";\nimport { mobnum_validator, email_validator, quantity_validator, pin_validator, post_date_validator, pre_date_validator } from \"../validators/validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cinput = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [haveError, setHaveError] = useState(false);\n  const validateInput = value => {\n    let isValid = true;\n    switch (props.type) {\n      case \"text\":\n        isValid = value ? true : false;\n        break;\n      case \"tel\":\n        isValid = mobnum_validator(value);\n        break;\n      case \"email\":\n        isValid = email_validator(value);\n        break;\n      case \"number\":\n        if (props.name) {\n          isValid = pin_validator(value);\n        } else if (props.quantity) {\n          isValid = quantity_validator(value);\n        }\n        break;\n      case \"date\":\n        if (props.name === \"postDate\") {\n          isValid = post_date_validator(value);\n        } else if (props.name === \"preDate\") {\n          isValid = pre_date_validator(value);\n        }\n        break;\n      default:\n        isValid = true;\n        break;\n    }\n    setHaveError(!isValid);\n    props.setErrorStatus(!isValid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inputContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.inputLabel,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), haveError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.errorMessage,\n      children: [\"(\", props.errorMessage, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.customInput,\n      type: props.type,\n      name: props.name,\n      placeholder: props.placeholder,\n      value: props.value,\n      onChange: event => {\n        props.onChange(event);\n        validateInput(event.target.value);\n      },\n      ref: ref,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}, \"TECDEGXTgAKmJLGDAO0dG/U12fY=\")), \"TECDEGXTgAKmJLGDAO0dG/U12fY=\");\n_c2 = Cinput;\nexport default Cinput;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cinput$forwardRef\");\n$RefreshReg$(_c2, \"Cinput\");","map":{"version":3,"names":["React","useState","useEffect","forwardRef","styles","mobnum_validator","email_validator","quantity_validator","pin_validator","post_date_validator","pre_date_validator","jsxDEV","_jsxDEV","Cinput","_s","_c","props","ref","haveError","setHaveError","validateInput","value","isValid","type","name","quantity","setErrorStatus","className","inputContainer","children","inputLabel","title","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","customInput","placeholder","onChange","event","target","required","_c2","$RefreshReg$"],"sources":["Z:/Projects/React/auto_race/new_client/src/celements/inputs/Cinput.js"],"sourcesContent":["import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport styles from \"./Cinput.module.css\";\r\nimport {\r\n  mobnum_validator,\r\n  email_validator,\r\n  quantity_validator,\r\n  pin_validator,\r\n  post_date_validator,\r\n  pre_date_validator,\r\n} from \"../validators/validator\";\r\n\r\nconst Cinput = forwardRef((props, ref) => {\r\n  const [haveError, setHaveError] = useState(false);\r\n\r\n  const validateInput = (value) => {\r\n    let isValid = true;\r\n    switch (props.type) {\r\n      case \"text\":\r\n        isValid = value ? true : false;\r\n        break;\r\n      case \"tel\":\r\n        isValid = mobnum_validator(value);\r\n        break;\r\n      case \"email\":\r\n        isValid = email_validator(value);\r\n        break;\r\n      case \"number\":\r\n        if(props.name){\r\n          isValid= pin_validator(value)\r\n        }else if(props.quantity){\r\n        isValid = quantity_validator(value);\r\n        }\r\n        break\r\n      case \"date\":\r\n        if (props.name === \"postDate\") {\r\n          isValid = post_date_validator(value);\r\n        } else if (props.name === \"preDate\") {\r\n          isValid = pre_date_validator(value);\r\n        }\r\n        break;\r\n      default:\r\n        isValid = true;\r\n        break;\r\n    }\r\n\r\n    setHaveError(!isValid);\r\n    props.setErrorStatus(!isValid);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputContainer}>\r\n      <label className={styles.inputLabel}>{props.title}</label>\r\n      {haveError && (\r\n        <span className={styles.errorMessage}>({props.errorMessage})</span>\r\n      )}\r\n      <input\r\n        className={styles.customInput}\r\n        type={props.type}\r\n        name={props.name}\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={(event) => {\r\n          props.onChange(event);\r\n          validateInput(event.target.value);\r\n        }}\r\n        ref={ref}\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Cinput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}